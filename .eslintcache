[{"C:\\Users\\Lokos\\Desktop\\ReactProjects\\projecta\\src\\index.js":"1","C:\\Users\\Lokos\\Desktop\\ReactProjects\\projecta\\src\\reportWebVitals.js":"2","C:\\Users\\Lokos\\Desktop\\ReactProjects\\projecta\\src\\App.js":"3","C:\\Users\\Lokos\\Desktop\\ReactProjects\\projecta\\src\\components\\Forcast\\Forecast.js":"4","C:\\Users\\Lokos\\Desktop\\ReactProjects\\projecta\\src\\components\\Conditions\\Conditions.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":435,"mtime":1629559839736,"results":"9","hashOfConfig":"7"},{"size":1403,"mtime":1610904380661,"results":"10","hashOfConfig":"7"},{"size":576,"mtime":1610908023430,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"oaqmmj",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"C:\\Users\\Lokos\\Desktop\\ReactProjects\\projecta\\src\\index.js",[],["25","26"],"C:\\Users\\Lokos\\Desktop\\ReactProjects\\projecta\\src\\reportWebVitals.js",[],"C:\\Users\\Lokos\\Desktop\\ReactProjects\\projecta\\src\\App.js",[],"C:\\Users\\Lokos\\Desktop\\ReactProjects\\projecta\\src\\components\\Forcast\\Forecast.js",["27"],"import React, { useState } from 'react';   \r\nimport Conditions from '../Conditions/Conditions';\r\n\r\nconst Forecast = () =>{\r\n\r\n    const [city, setCity] = useState('');\r\n    const [response, setResponse] = useState({});\r\n    const [unit, setUnit] = useState('metric');\r\n\r\n    const uriEncodedCity = encodeURIComponent(city);\r\n\r\n    function getForecast(e){\r\n        e.preventDefault();\r\n        fetch(`https://community-open-weather-map.p.rapidapi.com/weather?units=${unit}&q=${uriEncodedCity}`, {\r\n\t\"method\": \"GET\",\r\n\t\"headers\": {\r\n\t\t\"x-rapidapi-key\": \"9a43f7f98amsh7c94eeaf785b9e3p131e48jsn0b1ae96ac43e\",\r\n\t\t\"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\"\r\n\t}\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n           setResponse(response)\r\n       });\r\n    }\r\n    return (\r\n        <div>\r\n            <h2>Find current weather conditions</h2>\r\n            <form onSubmit={getForecast}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter City here\"\r\n                    maxLength=\"50\"\r\n                    value={city}\r\n                    onChange={(e) => setCity(e.target.value)}\r\n                    />\r\n                \r\n                <button type=\"submit\">Get Forecast</button>\r\n            </form>\r\n            <Conditions response={response}/>\r\n        </div>\r\n    )\r\n}\r\nexport default Forecast;","C:\\Users\\Lokos\\Desktop\\ReactProjects\\projecta\\src\\components\\Conditions\\Conditions.js",["28"],"import React from 'react';\r\n\r\nconst conditions = (props) => {\r\n   return (\r\n       <div>\r\n           {props.response.cod === 200 ?\r\n               <div>\r\n                   <p><strong>{props.response.name}</strong></p>\r\n                   <p>It is currently {Math.round(props.response.main.temp)} degrees out with {props.response.weather[0].description}.</p>\r\n                    <img src={`http://openweathermap.org/img/wn/${props.response.weather[0].icon}@2x.png`}/>\r\n               </div>\r\n           : null\r\n           }\r\n       </div>\r\n   )\r\n}\r\nexport default conditions;",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":8,"column":18,"nodeType":"35","messageId":"36","endLine":8,"endColumn":25},{"ruleId":"37","severity":1,"message":"38","line":10,"column":21,"nodeType":"39","endLine":10,"endColumn":109},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'setUnit' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]